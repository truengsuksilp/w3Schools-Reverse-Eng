/* === External Modules: express === */
const express = require('express');

/* === System Variables: route === */
const router = express.Router();
const Exercise = require('../models/Exercise');
const Question = require('../models/Question');

/* === Routes | base url: /exercises === */

// Show
router.get('/:language/:exercise_id/:question_id', (req, res) => {
    language = req.params.language;
    exercise_id = req.params.exercise_id;
    question_id = req.params.question_id;

    const question = Question.findOne({})
        .populate('exercise_id')
        .exec( (err, foundQuestion) => {
            if (err) console.log(err);
            const exercise_id = foundQuestion._id;

            context = { question: foundQuestion };
            return res.render('exercises/exercise', context);
        });

});

router.post('/:language/:exercise_id/:question_id', (req, res) => {

    res.send({msg: 'POSTED ANSWERS', body: req.body});

});

// Show: DAY 2 - Correct Answer

// Show: DAY 3 - Skip to next exercise

// Show: DAY 3 - Reset score


/* === Exports: route === */
module.exports = router;









// * === TODO === */

// == DAY 2 - Correct Answer
// Current approach: Same as Update Product
// New approach: Ask how to show answer without reload

// router.get('/:language/:exercise_id/:question_id/answer', (req, res) => { res.render('/../answer')});

// Show: DAY 2 - Correct Answer


// == Show: DAY 3 - Reset Score
// router.post('/:exercise_id/:question_id', (res, req) => {
    
    // Grab id from cookie generated by authController
        // userId = req.session.currentUser.id
    // Delete data in UserAnswer    
        // UserAnswer.deleteMany( {userId} )

// });